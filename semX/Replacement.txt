Шифр Виженера (полиалфавитной замены)
Дальнейшим продолжением шифров простой замены является многоалфавитные шифры. Абу Аль-Кинди в своих работах показал, что обычные моноалфавитные шифры довольно-таки просто поддаются частотному криптоанализу и первым предложил использовать многоалфавитные шифры. В Европе такие шифры были впервые описаны в 1467 году итальянским архитектором Леон Баттиста Альберти. В XVI веке немецкий аббат Иоганн Тритемий в своей книге “Стенография” представил схему полиалфавитного шифрования в виде таблицы. Более сложный вариант с использованием смешанных алфавитов был описан в 1563 году Джамбаттиста делла Порта в его книге “Про скрытую значимость отдельных букв”. Последним словом в развитии полиалфавитных шифров можно считать роторные машины, примером которой можно считать немецкую машину Enigma, разработанная в 1917 г. Суть полиалфавитных шифров заключена в многократном применении различных шифров простой замены к определенному числу букв шифруемого текста. То есть к каждой букве по отдельности применяется один из шифров простой замены.

Шифр Виженера состоит из последовательности нескольких шифров Цезаря с различными значениями сдвига. Для зашифровывания может использоваться таблица алфавитов, называемая квадрат (таблица) Виженера. Применительно к русскому алфавиту таблица Виженера составляется из строк по 33 символов, причём каждая следующая строка сдвигается на несколько позиций. Таким образом, в таблице получается 33 различных шифров Цезаря. На разных ктапах кодировки шифр Виженера использует различные алфавиты из ктой таблицы. На каждом ктапе шифрования используются различные алфавиты, выбираемые в зависимости от символа ключевого слова. Например, если ключевое слово “САТ”, то первая буква открытого текста шифруется с использованием алфавита “С’, вторая “А”, третья “Т”, четвёртая снова “С” и так далее.

Программа шифрования шифром Виженера:

class Vigenere:
        alphabet = ""  # TODO

        def __init__(self, keyword):
            self.alphaindex = {ch: index for index, ch in enumerate(self.alphabet)}
            self.key = [self.alphaindex[letter] for letter in keyword.lower()]

        def caesar(self, letter, shift):
            if letter in self.alphaindex:  # строчная буква
                index = (self.alphaindex[letter] + shift)%len(self.alphabet)
                cipherletter = self.alphabet[index]
            elif letter.lower() in self.alphaindex:  # заглавная буква
                cipherletter = self.caesar(letter.lower(), shift).upper()
            else:
                cipherletter = letter
            return cipherletter

        def encode(self, line):
            ciphertext = []
            for i, letter in enumerate(line):
                shift = self.key[i % len(self.key)]
                cipherletter = self.caesar(letter, shift)
                ciphertext.append(cipherletter)

            return ''.join(ciphertext)

        def decode(self, line):
            pass  # TODO


    keyword = input('keyword=')
    cipher = Vigenere(keyword)

    line = input()
    while line != '.':
        print(cipher.decode(line))
        line = input()
Последний раздел работы зашифрован шифром Виженера с неизвестным кодовым словом. Подсказка для самых стойких криптоаналитиков: длина кодового слова 8.
